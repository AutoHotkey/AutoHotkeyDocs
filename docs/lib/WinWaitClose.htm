<!DOCTYPE HTML>
<html lang="en">
<head>
<title>WinWaitClose - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The WinWaitClose function waits until no matching windows can be found." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>WinWaitClose</h1>

<p>Waits until no matching windows can be found.</p>

<pre class="Syntax">Boolean := <span class="func">WinWaitClose</span>(<span class="optional">WinTitle, WinText, Timeout, ExcludeTitle, ExcludeText</span>)</pre>
<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>WinTitle, WinText, ExcludeTitle, ExcludeText</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a>, <a href="../Concepts.htm#numbers">Integer</a> or <a href="../Concepts.htm#objects">Object</a></p>
    <p>If each of these is blank or omitted, the <a href="../misc/WinTitle.htm#LastFoundWindow">Last Found Window</a> will be used. Otherwise, specify for <em>WinTitle</em> a <a href="../misc/WinTitle.htm">window title or other criteria</a> to identify the target window and/or for <em>WinText</em> a substring from a single text element of the target window (as revealed by the included Window Spy utility).</p>
    <p><em>ExcludeTitle</em> and <em>ExcludeText</em> can be used to exclude one or more windows by their title or text. Their specification is similar to <em>WinTitle</em> and <em>WinText</em>, except that <em>ExcludeTitle</em> does not recognize any criteria other than the window title.</p>
    <p>Window titles and text are case-sensitive. By default, hidden windows are not detected and hidden text elements are detected, unless changed with <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> and <a href="DetectHiddenText.htm">DetectHiddenText</a>. By default, a window title can contain <em>WinTitle</em> or <em>ExcludeTitle</em> anywhere inside it to be a match, unless changed with <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>.</p>
  </dd>

  <dt>Timeout</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a> or <a href="../Concepts.htm#numbers">Float</a></p>
    <p>If omitted, the function will wait indefinitely. Otherwise, it will wait no longer than this many seconds. To wait for a fraction of a second, specify a floating-point number, for example, 0.25 to wait for a maximum of 250 milliseconds.</p>
  </dd>

</dl>

<h2 id="Return_Value">Return Value</h2>
<p>Type: <a href="../Concepts.htm#boolean">Integer (boolean)</a></p>
<p>This function returns 0 (false) if the function timed out or 1 (true) otherwise.</p>

<h2 id="Remarks">Remarks</h2>
<p>Whenever no matching windows exist, the function will not wait for <em>Timeout</em> to expire. Instead, it will immediately return 1 and the script will continue executing. Conversely, the function may continue waiting even after a matching window is closed, until no more matching windows can be found.</p>
<p>If <em>WinTitle</em> specifies a <a href="../misc/WinTitle.htm#ahk_id">pure HWND</a> (as an <a href="../Concepts.htm#numbers">Integer</a> or an <a href="../Objects.htm">Object</a> with a HWND property), hidden windows are detected only when using <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a>. This only applies to <a href="WinWait.htm">WinWait</a> and WinWaitClose; for other windowing functions, specifying a pure HWND causes hidden windows to be detected regardless of DetectHiddenWindows.</p>
<p>Since <code>"A"</code> matches whichever window is active at any given moment, <code>WinWaitClose "A"</code> typically waits indefinitely. To instead wait for the current active window to close, specify its title or unique ID as in the following example:</p>
<pre>WinWaitClose WinExist("A")</pre>
<p>WinWaitClose updates the <a href="../misc/WinTitle.htm#LastFoundWindow">Last Found Window</a> whenever it finds a matching window. One use for this is to identify or operate on the window after the function times out. For example:</p>
<pre>
Gui("", "Test window " Random()).Show("w300 h50")  <em>; Show a test window.</em>
if !WinWaitClose("Test",, 5)  <em>; Wait 5 seconds for someone to close it.</em>
{
    MsgBox "Window not yet closed: " WinGetTitle()
    WinClose  <em>; Close the window found by WinWaitClose.</em>
}
</pre>
<p>While the function is in a waiting state, new <a href="../misc/Threads.htm">threads</a> can be launched via <a href="../Hotkeys.htm">hotkey</a>, <a href="Menu.htm">custom menu item</a>, or <a href="SetTimer.htm">timer</a>.</p>
<p>If another <a href="../misc/Threads.htm">thread</a> changes the contents of any variable(s) that were used for this function's parameters, the function will not see the change -- it will continue to use the title and text that were originally present in the variables when the function first started waiting.</p>

<h2 id="Related">Related</h2>
<p><a href="WinClose.htm">WinClose</a>, <a href="WinWait.htm">WinWait</a>, <a href="WinWaitActive.htm">WinWaitActive</a>, <a href="WinExist.htm">WinExist</a>, <a href="WinActive.htm">WinActive</a>, <a href="ProcessWaitClose.htm">ProcessWaitClose</a>, <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>, <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a></p>
<h2 id="Examples">Examples</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Opens Notepad, waits until it exists and then waits until it is closed.</p>
<pre>Run "notepad.exe"
WinWait "Untitled - Notepad"
WinWaitClose <em>; Use the window found by WinWait.</em>
MsgBox "Notepad is now closed."</pre>
</div>

</body>
</html>
