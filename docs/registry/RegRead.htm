<!DOCTYPE HTML>
<html lang="en">
<head>
<title>RegRead - Syntax &amp; Usage | AutoHotkey</title>
<meta name="description" content="The RegRead command reads a value from the registry." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>RegRead</h1>
<p>Reads a value from the registry.</p>

<h2 id="new">New Syntax  <span class="ver">[v1.1.21+]</span></h2>
<pre class="Syntax"><span class="func">RegRead</span>, OutputVar, KeyName <span class="optional">, ValueName</span></pre>

<h3 id="New_Parameters">Parameters</h3>
<dl>

  <dt>OutputVar</dt>
  <dd><p>The name of the variable in which to store the retrieved value. If the value cannot be retrieved, the variable is made blank and <a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to 1.</p></dd>

  <dt>KeyName</dt>
  <dd><p>The full name of the registry key.</p>
      <p>This must start with HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_USER, HKEY_CLASSES_ROOT, or HKEY_CURRENT_CONFIG (or the abbreviations for each of these, such as HKLM). To access a <a href="LoopReg.htm#remote">remote registry</a>, prepend the computer name and a colon (or <span class="ver">[in v1.1.21+]</span> a slash), as in this example: <code>\\workstation01:HKEY_LOCAL_MACHINE</code></p></dd>

  <dt>ValueName</dt>
  <dd><p>The name of the value to retrieve. If omitted, <em>KeyName</em>'s default value will be retrieved, which is the value displayed as "(Default)" by RegEdit. If there is no default value (that is, if RegEdit displays "value not set"), <em>OutputVar</em> is made blank and ErrorLevel is set to 1.</p></dd>

</dl>

<h2 id="old">Old Syntax</h2>
<p class="warning"><strong>Deprecated:</strong> This syntax is not recommended for use in new scripts. Use the <a href="#new">new syntax</a> instead.</p>
<pre class="Syntax"><span class="func">RegRead</span>, OutputVar, RootKey, SubKey <span class="optional">, ValueName</span></pre>

<h3 id="Old_Parameters">Parameters</h3>
<dl>

  <dt>OutputVar</dt>
  <dd><p>The name of the variable in which to store the retrieved value. If the value cannot be retrieved, the variable is made blank and <a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to 1.</p></dd>

  <dt>RootKey</dt>
  <dd><p>Must be either HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_USER, HKEY_CLASSES_ROOT, or HKEY_CURRENT_CONFIG (or the abbreviations for each of these, such as HKLM). To access a <a href="LoopReg.htm#remote">remote registry</a>, prepend the computer name and a colon (or <span class="ver">[in v1.1.21+]</span> a slash), as in this example: <code>\\workstation01:HKEY_LOCAL_MACHINE</code></p></dd>

  <dt>SubKey</dt>
  <dd><p>The name of the subkey (e.g. Software\SomeApplication).</p></dd>
  
  <dt>ValueName</dt>
  <dd><p>The name of the value to retrieve. If omitted, <em>SubKey</em>'s default value will be retrieved, which is the value displayed as "(Default)" by RegEdit. If there is no default value (that is, if RegEdit displays "value not set"), <em>OutputVar</em> is made blank and ErrorLevel is set to 1.</p></dd>

</dl>

<h2 id="Error_Handling">Error Handling</h2>
<p><span class="ver">[v1.1.04+]</span>: This command is able to throw an exception on failure. For more information, see <a href="Catch.htm#RuntimeErrors">Runtime Errors</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to 1 if there was a problem (such as a nonexistent key or value) or 0 otherwise.</p>
<p><a href="../Variables.htm#LastError">A_LastError</a> is set to the result of the operating system's GetLastError() function.</p>

<h2 id="Remarks">Remarks</h2>
<p>Currently only the following value types are supported: REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ, REG_DWORD, and REG_BINARY.</p>
<p>REG_DWORD values are always expressed as positive decimal numbers. If the number was intended to be negative, convert it to a signed 32-bit integer by using <code>OutputVar := OutputVar &lt;&lt; 32 &gt;&gt; 32</code> or similar.</p>
<p>When reading a REG_BINARY key the result is a string of hex characters. For example, the REG_BINARY value of 01,a9,ff,77 will be read as the string 01A9FF77.</p>
<p>When reading a REG_MULTI_SZ key, each of the components ends in a linefeed character (`n). If there are no components, <em>OutputVar</em> will be made blank. See <a href="FileSelectFile.htm">FileSelectFile</a> for an example of how to extract the individual components from <em>OutputVar</em>.</p>
<p><span class="ver">[v1.1.10.01+]</span>: REG_BINARY values larger than 64K can also be read.</p>
<p>To retrieve and operate upon multiple registry keys or values, consider using a <a href="LoopReg.htm">registry-loop</a>.</p>
<p>For details about how to access the registry of a remote computer, see the remarks in <a href="LoopReg.htm">registry-loop</a>.</p>
<p>To read and write entries from the 64-bit sections of the registry in a 32-bit script or vice versa, use <a href="SetRegView.htm">SetRegView</a>.</p>

<h2 id="Related">Related</h2>
<p><a href="RegDelete.htm">RegDelete</a>, <a href="RegWrite.htm">RegWrite</a>, <a href="LoopReg.htm">Registry-loop</a>, <a href="SetRegView.htm">SetRegView</a>, <a href="IniRead.htm">IniRead</a></p>

<h2 id="Examples">Examples</h2>
<div class="ex" id="ExNewVsOld">
<p><a class="ex_number" href="#ExNewVsOld"></a> New syntax vs. old syntax.</p>
<p>Despite the different syntax, both examples have the same effect; that is, they read a value from the registry and store it in <var>OutputVar</var>.</p>
<pre>RegRead, OutputVar, HKEY_LOCAL_MACHINE\Software\SomeApplication, TestValue</pre>
<pre>RegRead, OutputVar, HKEY_LOCAL_MACHINE, Software\SomeApplication, TestValue</pre>
</div>

<div class="ex" id="ExProgramFiles">
<p><a class="ex_number" href="#ExProgramFiles"></a> Retrieves and reports the path of the "Program Files" directory. See <a href="EnvGet.htm#ExProgramFiles">EnvGet example #2</a> for an alternative method.</p>
<pre><em>; The line below ensures that the path of the 64-bit Program Files
; directory is returned if the OS is 64-bit and the script is not.</em>
<a href="SetRegView.htm">SetRegView</a> 64  <em>; Requires <span class="ver">[v1.1.08+]</span></em>

RegRead, OutputVar, HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion, ProgramFilesDir
MsgBox, Program files are in: %OutputVar%</pre>
</div>

<div class="ex" id="ExType">
<p><a class="ex_number" href="#ExType"></a> Retrieves the TYPE of a registry value (e.g. REG_SZ or REG_DWORD).</p>
<pre>MsgBox % RegKeyType("HKCU", "Environment", "TEMP")
return

RegKeyType(RootKey, SubKey, ValueName)  <em>; This function returns the type of the specified value.</em>
{
    Loop, %RootKey%, %SubKey%
        if (A_LoopRegName = ValueName)
            return A_LoopRegType
    return "Error"
}</pre>
</div>

</body>
</html>
