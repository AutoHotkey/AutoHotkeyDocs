<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>ControlSend / ControlSendRaw</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>ControlSend / ControlSendRaw</h1>

<p>Sends simulated keystrokes to a window or control.</p>

<pre class="Syntax">ControlSend [, Control, Keys, WinTitle, WinText, ExcludeTitle, ExcludeText]
ControlSendRaw: Same parameters as above.</pre>
<h3>Parameters</h3>
<dl>

  <dt>Control</dt>
  <dd><p>Can be either ClassNN (the classname and instance number of the control) or the name/text of the control, both of which can be determined via Window Spy. When using name/text, the matching behavior is determined by <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>. If this parameter is blank or omitted, the target window's topmost control will be used. If this parameter is ahk_parent, the keystrokes will be sent directly to the control's parent window (see <a href="../misc/Winamp.htm">Automating Winamp</a> for an example).</p>
    <p>To operate upon a control's HWND (window handle), leave the <em>Control </em>parameter blank and specify <em>ahk_id %ControlHwnd%</em> for the <em>WinTitle</em> parameter (this also works on hidden controls even when <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> is Off) . The HWND of a control is typically retrieved via <a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a>, <a href="MouseGetPos.htm">MouseGetPos</a>, or <a href="DllCall.htm">DllCall</a>.</p></dd>

  <dt>Keys</dt>
  <dd><p>The sequence of keys to send (see the <a href="Send.htm">Send</a> command for details). To send a literal comma, <a href="../misc/EscapeChar.htm">escape</a> it (`,). The rate at which characters are sent is determined by <a href="SetKeyDelay.htm">SetKeyDelay</a>.</p>
    <p>Unlike the <a href="Send.htm">Send</a> command, mouse clicks cannot be sent by ControlSend. Use <a href="ControlClick.htm">ControlClick</a> for that.</p></dd>

  <dt>WinTitle</dt>
  <dd><p>The title or partial title of the target window (the matching behavior is determined by <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>). If this and the next 3 parameters are omitted, the <a href="../LastFoundWindow.htm">Last Found Window</a> will be used. If this is the letter A and the next 3 parameters are omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a <a href="Process.htm">process identifier (PID)</a>, specify ahk_pid %VarContainingPID%. To use a <a href="GroupAdd.htm">window group</a>, specify ahk_group GroupName. To use a window's <a href="WinGet.htm">unique ID number</a>, specify ahk_id %VarContainingID%. The search can be narrowed by specifying <a href="../LastFoundWindow.htm#multi">multiple criteria</a>. For example: <em>My File.txt ahk_class Notepad</em></p></dd>

  <dt>WinText</dt>
  <dd><p>If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if <a href="DetectHiddenText.htm">DetectHiddenText</a> is ON.</p></dd>

  <dt>ExcludeTitle</dt>
  <dd><p>Windows whose titles include this value will not be considered.</p></dd>

  <dt>ExcludeText</dt>
  <dd><p>Windows whose text include this value will not be considered.</p></dd>

</dl>

<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> This command is able to throw an exception on failure. For more information, see <a href="Catch.htm#RuntimeErrors">Runtime Errors</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to 1 if there was a problem or 0 otherwise.</p>
<h3>Remarks</h3>
<p>ControlSendRaw sends the keystrokes in the <em>Keys</em> parameter exactly as they appear rather than translating {Enter} to an ENTER keystroke, ^c to Control-C, etc. </p>
<p>If the <em>Control</em> parameter is omitted, this command will attempt to send directly to the target window by sending to its topmost control (which is often the correct one) or the window itself if there are no controls. This is useful if a window does not appear to have any controls at all, or just for the convenience of not having to worry about which control to send to.</p>
<p>By default, modifier keystrokes (Control, Alt, Shift, and Win) are sent as they normally would be by the Send command. This allows command prompt and other console windows to properly detect uppercase letters, control characters, etc. It may also improve reliability in other ways.</p>
<p>However, in some cases these modifier events may interfere with the active window, especially if the user is actively typing during a ControlSend or if the Alt key is being sent (since Alt activates the active window's menu bar). This can be avoided by explicitly sending modifier up and down events as in this example:<br>
ControlSend, Edit1, {Alt down}f{Alt up}, Untitled - Notepad</p>
<p>The method above also allows the sending of modifier keystrokes (Control/Alt/Shift/Win) while the workstation is locked (protected by logon prompt).</p>
<p><a href="BlockInput.htm">BlockInput</a> should be avoided when using ControlSend against a console window such as command prompt. This is because it might prevent capitalization and modifier keys such as Control from working properly.</p>
<p>The value of <a href="SetKeyDelay.htm">SetKeyDelay</a> determines the speed at which keys are sent. If the target window does not receive the keystrokes reliably, try increasing the press duration via the second parameter of <a href="SetKeyDelay.htm">SetKeyDelay</a> as in these examples:<br>
SetKeyDelay, 10, 10<br>
SetKeyDelay, 0, 10<br>
SetKeyDelay, -1, 0</p>
<p>If the target control is an Edit control (or something similar), the following are usually more reliable and faster than ControlSend:<br>
<a href="Control.htm">Control</a>, EditPaste, This text will be inserted at the caret position., ControlName, WinTitle<br>
<a href="ControlSetText.htm">ControlSetText</a>, ControlName, This text will entirely replace any current text., WinTitle </p>
<p>ControlSend is generally not capable of manipulating a window's menu bar. To work around this, use <a href="MenuSelect.htm">MenuSelect</a>. If that is not possible due to the nature of the menu bar, you could try to discover the message that corresponds to the desired menu item by following the <a href="../misc/SendMessage.htm">SendMessage Tutorial</a>.</p>
<p>Window titles and text are case sensitive. Hidden windows are not detected unless <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> has been turned on.</p>
<h3>Related</h3>
<p><a href="SetKeyDelay.htm">SetKeyDelay</a>, <a href="../misc/EscapeChar.htm">Escape sequences (e.g. `%) </a>, <a href="Control.htm">Control</a>, <a href="ControlGet.htm">ControlGet</a>, <a href="ControlGetText.htm">ControlGetText</a>, <a href="ControlMove.htm">ControlMove</a>, <a href="ControlGetPos.htm">ControlGetPos</a>, <a href="ControlClick.htm">ControlClick</a>, <a href="ControlSetText.htm">ControlSetText</a>, <a href="ControlFocus.htm">ControlFocus</a>, <a href="Send.htm">Send, </a><a href="../misc/Winamp.htm">Automating Winamp</a></p>
<h3>Examples</h3>
<h4>Function Syntax</h4>
<pre class="NoIndent">Run("notepad", "", "MIN", PID)		<em>; Run Notepad minimized.</em>
WinWait("ahk_pid " PID)			<em>; Wait for it to appear.</em>
<em>; Send the text to the inactive Notepad edit control.
; The third parameter is omitted so the last found window is used.</em>
ControlSend("Edit1", "This is a line of text in the notepad window.{Enter}")
ControlSendRaw("Edit1", "Notice that {Enter} is not sent as an Enter keystroke with ControlSendRaw.")

Msgbox("Press OK to activate the window to see the result.")
WinActivate("ahk_pid " PID)		<em>;Show the result.</em></pre>
<pre class="NoIndent">SetTitleMatchMode(2)
Run(A_ComSpec, "", "", PID)			<em>; Run command prompt.</em>
WinWait("ahk_pid " PID)				<em>; Wait for it to appear.</em>
ControlSend("", "ipconfig{Enter}", "cmd.exe")	<em>; Send directly to the command prompt window.</em></pre>
<h4>Command Syntax</h4>
<pre class="NoIndent">Run, notepad,, MIN, PID		<em>; Run Notepad minimized.</em>
WinWait, ahk_pid %PID		<em>; Wait for it to appear.</em>
<em>; Send the text to the inactive Notepad edit control.
; The third parameter is omitted so the last found window is used.</em>
ControlSend, Edit1, This is a line of text in the notepad window.{Enter}	
ControlSendRaw, Edit1, Notice that {Enter} is not sent as an Enter keystroke with ControlSendRaw.		

Msgbox, Press OK to activate the window to see the result.
WinActivate, ahk_pid %PID	<em>;Show the result.</em></pre>
<pre class="NoIndent">SetTitleMatchMode, 2
Run, %A_ComSpec,,, PID				<em>; Run command prompt.</em>
WinWait, ahk_pid %PID				<em>; Wait for it to appear.</em>
ControlSend,, ipconfig{Enter}, cmd.exe		<em>; Send directly to the command prompt window.</em></pre>
</body>
</html>