<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>WinMove</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>WinMove</h1>

<p>Changes the position and/or size of the specified window.</p>

<pre class="Syntax">WinMove, X, Y
WinMove, WinTitle, WinText, X, Y [, Width, Height, ExcludeTitle, ExcludeText]</pre>
<h3>Parameters</h3>
<table class="info">
  <tr>
    <td width="15%">X, Y</td>
    <td width="85%"><p>The X and Y coordinates (in pixels) of the upper left corner of the target window's new location, which can be <a href="../Variables.htm#Expressions">expressions</a>. The upper-left pixel of the screen is at 0, 0.</p>
    <p>If these are the only parameters given with the command, the <a href="../misc/WinTitle.htm#LastFoundWindow">Last Found Window</a> will be used as the target window.</p>
    <p>Otherwise, X and/or Y can be omitted, in which case the current position is used.</p></td>
  </tr>
  <tr>
    <td>WinTitle</td>
    <td>The title or partial title of the target window (the matching behavior is determined by <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>). If this and the other 3 window parameters are blank or omitted, the <a href="../LastFoundWindow.htm">Last Found Window</a> will be used. If this is the letter A and the other 3 window parameters are blank or omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a <a href="Process.htm">process identifier (PID)</a>, specify ahk_pid %VarContainingPID%. To use a <a href="GroupAdd.htm">window group</a>, specify ahk_group GroupName. To use a window's <a href="WinGet.htm">unique ID number</a>, specify ahk_id %VarContainingID%. The search can be narrowed by specifying <a href="../LastFoundWindow.htm#multi">multiple criteria</a>. For example: <em>My File.txt ahk_class Notepad</em></td>
  </tr>
  <tr>
    <td>WinText</td>
    <td>If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if <a href="DetectHiddenText.htm">DetectHiddenText</a> is ON.</td>
  </tr>
  <tr>
    <td>Width, Height</td>
    <td>The new width and height of the window (in pixels), which can be <a href="../Variables.htm#Expressions">expressions</a>. If either is omitted, blank, or the word DEFAULT, the size in that dimension will not be changed.</td>
  </tr>
  <tr>
    <td>ExcludeTitle</td>
    <td>Windows whose titles include this value will not be considered.</td>
  </tr>
  <tr>
    <td>ExcludeText</td>
    <td>Windows whose text include this value will not be considered.</td>
  </tr>
</table>

<h3>Remarks</h3>
<p> If <em>Width</em> and <em>Height</em> are small (or negative), most windows with a title bar will generally go no smaller than 112 x 27 pixels (however, some types of windows may have a different minimum size). If <em>Width</em> and <em>Height</em> are large, most windows will go no larger than approximately 12 pixels beyond the dimensions of the desktop.</p>
<p>Negative values are allowed for the x and y coordinates to support multi-monitor systems and to allow a window to be moved entirely off screen.</p>
<p>Although WinMove cannot move minimized windows, it can move hidden windows if <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> is on.</p>
<p>The speed of WinMove is affected by <a href="SetWinDelay.htm">SetWinDelay</a>.</p>
<p>Window titles and text are case sensitive. Hidden windows are not detected unless <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> has been turned on.</p>
<h3>Related</h3>
<p><a href="ControlMove.htm">ControlMove</a>, <a href="WinGetPos.htm">WinGetPos</a>, <a href="WinHide.htm">WinHide</a>, <a href="WinMinimize.htm">WinMinimize</a>, <a href="WinMaximize.htm">WinMaximize</a>, <a href="WinSet.htm">WinSet</a></p>
<h3>Example</h3>
<pre class="NoIndent">Run, calc.exe
WinWait, Calculator
WinMove, 0, 0 <em>; Move the window found by WinWait to the upper-left corner of the screen.</em>

SplashTextOn, 400, 300, Clipboard, The clipboard contains:`n%clipboard%
WinMove, Clipboard, , 0, 0 <em>; Move the splash window to the top left corner. </em>
Msgbox, Press OK to dismiss the SplashText
SplashTextOff

<em>; The following <a href="../Functions.htm">function</a> centers the specified window on the screen:</em>
CenterWindow(WinTitle)
{
    WinGetPos,,, Width, Height, %WinTitle%
    WinMove, %WinTitle%,, (A_ScreenWidth/2)-(Width/2), (A_ScreenHeight/2)-(Height/2)
}</pre>

</body>
</html>
