<!DOCTYPE HTML>
<html lang="en">
<head>
<title>FileCopy - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The FileCopy function copies one or more files." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>FileCopy</h1>

<p>Copies one or more files.</p>

<pre class="Syntax"><span class="func">FileCopy</span> SourcePattern, DestPattern <span class="optional">, Overwrite</span></pre>
<h2>Parameters</h2>
<dl>

  <dt>SourcePattern</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>The name of a single file or folder, or a wildcard pattern such as C:\Temp\*.tmp. <em>SourcePattern</em> is assumed to be in <a href="../Variables.htm#WorkingDir">A_WorkingDir</a> if an absolute path isn't specified.</p>
  </dd>

  <dt>DestPattern</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>The name or pattern of the destination, which is assumed to be in <a href="../Variables.htm#WorkingDir">A_WorkingDir</a> if an absolute path isn't specified. The destination directory must already exist. To perform a simple copy -- retaining the existing file name(s) -- specify only the folder name as shown in these functionally identical examples:</p>
      <pre>FileCopy "C:\*.txt", "C:\My Folder"</pre>
      <pre>FileCopy "C:\*.txt", "C:\My Folder\*.*"</pre>
  </dd>

  <dt>Overwrite</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#boolean">Integer (boolean)</a></p>
    <p>This parameter determines whether to overwrite files if they already exist. If this parameter is 1 (true), the function overwrites existing files. If omitted or 0 (false), the function does not overwrite existing files.</p>
  </dd>

</dl>

<h2>Error Handling</h2>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to the number of files that could not be copied due to an error, or 0 otherwise.</p>
<p>In either case, if the source file is a single file (no wildcards) and it does not exist, ErrorLevel is set to 0. To detect this condition, use <a href="FileExist.htm">FileExist</a> on the source file prior to copying it.</p>
<p>Unlike <a href="FileMove.htm">FileMove</a>, copying a file onto itself is always counted as an error, even if the overwrite mode is in effect.</p>
<p>If files were found, <a href="../Variables.htm#LastError">A_LastError</a> is set to 0 (zero) or the result of the operating system's GetLastError() function immediately after the last failure. Otherwise A_LastError contains an error code that might indicate why no files were found.</p>

<h2>Remarks</h2>
<p>FileCopy copies files only. To instead copy the contents of a folder (all its files and subfolders), see the examples section below. To copy a single folder (including its subfolders), use <a href="DirCopy.htm">DirCopy</a>.</p>
<p>The operation will continue even if error(s) are encountered.</p>
<h2>Related</h2>
<p><a href="FileMove.htm">FileMove</a>, <a href="DirCopy.htm">DirCopy</a>, <a href="DirMove.htm">DirMove</a>, <a href="FileDelete.htm">FileDelete</a></p>
<h2>Examples</h2>
<div class="ex" id="ExBasic">
<p><a href="#ExBasic">#1</a></p>
<pre>FileCopy "C:\My Documents\List1.txt", "D:\Main Backup\"  <em>; Make a copy but keep the orig. file name.</em>
FileCopy "C:\My File.txt", "C:\My File New.txt"  <em>; Copy a file into the same folder by providing a new name.</em>
FileCopy "C:\Folder1\*.txt", "D:\New Folder\*.bkp"  <em>; Copy to new location and give new extension.</em></pre>
</div>

<div class="ex" id="ExCopyAll">
<p><a href="#ExCopyAll">#2</a>: The following example copies all files and folders inside a folder to a different folder:</p>
<pre>ErrorCount := CopyFilesAndFolders(&quot;C:\My Folder\*.*&quot;, &quot;D:\Folder to receive all files &amp; folders&quot;)
if ErrorCount != 0
    MsgBox ErrorCount " files/folders could not be copied."

CopyFilesAndFolders(SourcePattern, DestinationFolder, DoOverwrite := false)
<em>; Copies all files and folders matching SourcePattern into the folder named DestinationFolder and
; returns the number of files/folders that could not be copied.</em>
{
    <em>; First copy all the files (but not the folders):</em>
    FileCopy SourcePattern, DestinationFolder, DoOverwrite
    ErrorCount := ErrorLevel
    <em>; Now copy all the folders:</em>
    Loop Files, SourcePattern, "D"  <em>; D means &quot;retrieve folders only&quot;.</em>
    {
        DirCopy A_LoopFilePath, DestinationFolder "\" A_LoopFileName, DoOverwrite
        ErrorCount += ErrorLevel
        if ErrorLevel  <em>; Report each problem folder by name.</em>
            MsgBox "Could not copy " A_LoopFilePath " into " DestinationFolder
    }
    return ErrorCount
}</pre>
</div>

</body>
</html>
