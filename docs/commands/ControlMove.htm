<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>ControlMove</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>ControlMove</h1>

<p>Moves or resizes a control. </p>

<pre class="Syntax">ControlMove, Control, X, Y, Width, Height [, WinTitle, WinText, ExcludeTitle, ExcludeText]</pre>
<h3>Parameters</h3>
<table class="info">
  <tr>
    <td width="15%">Control</td>
    <td width="85%"><p>Can be either ClassNN (the classname and instance number of the control) or the name/text of the control, both of which can be determined via Window Spy. When using name/text, the matching behavior is determined by <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>. If this parameter is blank, the target window's topmost control will be used.</p>
    <p>To operate upon a control's HWND (window handle), leave the <em>Control </em>parameter blank and specify <em>ahk_id %ControlHwnd%</em> for the <em>WinTitle</em> parameter (this also works on hidden controls even when <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> is Off) . The HWND of a control is typically retrieved via <a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a>, <a href="MouseGetPos.htm">MouseGetPos</a>, or <a href="DllCall.htm">DllCall</a>.</p></td>
  </tr>
  <tr>
    <td>X, Y </td>
    <td>The X and Y coordinates  (in pixels) of the upper left corner of <em>Control</em>'s new location, which can be <a href="../Variables.htm#Expressions">expressions</a>. If either coordinate is blank, <em>Control</em>'s position in that dimension will not be changed. The coordinates are relative to the upper-left corner of the <em>Control</em>'s parent window; <a href="ControlGetPos.htm">ControlGetPos</a> or Window Spy can be used to determine them.</td>
  </tr>
  <tr>
    <td>Width, Height</td>
    <td>The new width and height of <em>Control</em> (in pixels), which can be <a href="../Variables.htm#Expressions">expressions</a>. If either parameter is blank or omitted, <em>Control</em>'s size in that dimension will not be changed.</td>
  </tr>
  <tr>
    <td>WinTitle</td>
    <td>Identifies the window. For details and examples see <a href="../misc/WinTitle.htm">WinTitle</a></td>
  </tr>
  <tr>
    <td>WinText</td>
    <td>If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if <a href="DetectHiddenText.htm">DetectHiddenText</a> is ON.</td>
  </tr>
  <tr>
    <td>ExcludeTitle</td>
    <td>Windows whose titles include this value will not be considered.</td>
  </tr>
  <tr>
    <td>ExcludeText</td>
    <td>Windows whose text include this value will not be considered.</td>
  </tr>
</table>

<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> This command is able to throw an exception on failure. For more information, see <a href="Catch.htm#RuntimeErrors">Runtime Errors</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to 1 if there was a problem or 0 otherwise.</p>
<h3>Remarks</h3>
<p>To improve reliability, a delay is done automatically after every use of this command. That delay can be changed via <a href="SetControlDelay.htm">SetControlDelay</a>.</p>
<p>Window titles and text are case sensitive. Hidden windows are not detected unless <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> has been turned on.</p>

<h3>Related</h3>
<p><a href="ControlGetPos.htm">ControlGetPos</a>, <a href="WinMove.htm">WinMove</a>, <a href="SetControlDelay.htm">SetControlDelay</a>, <a href="Control.htm">Control</a>, <a href="ControlGet.htm">ControlGet</a>, <a href="ControlGetText.htm">ControlGetText</a>, <a href="ControlSetText.htm">ControlSetText</a>, <a href="Control.htm"></a><a href="ControlClick.htm">ControlClick</a>, <a href="ControlFocus.htm">ControlFocus</a>, <a href="ControlSend.htm">ControlSend</a></p>
<h3>Example</h3>
<pre class="NoIndent">SetTimer, ControlMoveTimer
InputBox, OutputVar, My Input Box
return

ControlMoveTimer:
IfWinNotExist, My Input Box
    return
<em>; Otherwise the above set the &quot;last found&quot; window for us:</em>
SetTimer, ControlMoveTimer, off
WinActivate
<strong>ControlMove, OK, 10, , 200</strong>  <em>; Move the OK button to the left and increase its width.</em>
return</pre>

</body>
</html>
