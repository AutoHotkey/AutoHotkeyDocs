<!DOCTYPE HTML>
<html lang="en">
<head>
<title>ComObjFlags - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The ComObjFlags function retrieves or changes flags which control a COM wrapper object's behaviour." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>


<h1>ComObjFlags</h1>
<p>Retrieves or changes flags which control a COM wrapper object's behaviour.</p>
<pre class="Syntax">Flags := <span class="func">ComObjFlags</span>(ComObject <span class="optional">, NewFlags, Mask</span>)</pre>

<h2>Parameters</h2>
<dl>

  <dt>ComObject</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#objects">Object</a></p>
    <p>A COM wrapper object.</p>
  </dd>

  <dt>NewFlags</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>New values for the flags identified by <i>Mask</i>, or flags to add or remove.</p>
  </dd>

  <dt>Mask</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>A bitmask of flags to change.</p>
  </dd>

</dl>

<h2>Return Value</h2>
<p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
<p>This function returns the current flags of the specified COM object (after applying <i>NewFlags</i>, if specified).</p>

<h2>Error Handling</h2>
<p>If <em>ComObject</em> is invalid, the function may throw an exception, exit the script or return an empty string, depending on the current <a href="ComObjError.htm">ComObjError</a> setting and <a href="ComObjError.htm#factors">other factors</a>.</p>

<h2>Flags</h2>
<table class="info">
  <tr>
    <td>F_OWNVALUE<br>1</td>
    <td>Currently only affects SafeArrays. If this flag is set, the SafeArray is destroyed when the wrapper object is freed. Since SafeArrays have no reference counting mechanism, if a SafeArray with this flag is assigned to an element of another SafeArray, a separate copy is created.</td>
  </tr>
</table>

<h2>Remarks</h2>
<p>If <i>Mask</i> is omitted, <i>NewFlags</i> specifies the flags to add (if positive) or remove (if negative). For example, <code>ComObjFlags(obj, -1)</code> removes the F_OWNVALUE flag. Do not specify any value for <i>Mask</i> other than 0 or 1; all other bits are reserved for future use.</p>

<h2>Related</h2>
<p><a href="ComObject.htm">ComObject</a>, <a href="ComObjActive.htm">ComObjActive</a>, <a href="ComObjArray.htm">ComObjArray</a></p>

<h2>Examples</h2>
<div class="ex" id="ExCheck">
<p><a href="#ExCheck">#1</a>: Check for the presence of the F_OWNVALUE flag.</p>
<pre>arr := ComObjArray(0xC, 1)
if ComObjFlags(arr) &amp; 1
    MsgBox "arr will be automatically destroyed."
else
    MsgBox "arr will not be automatically destroyed."
</pre>
</div>

<div class="ex" id="ExRemove">
<p><a href="#ExRemove">#2</a>: Change array-in-array behaviour.</p>
<pre>arr1 := ComObjArray(0xC, 3)
arr2 := ComObjArray(0xC, 1)
arr2[0] := "original value"
arr1[0] := arr2         <em>; Assign implicit copy.</em>
ComObjFlags(arr2, -1)   <em>; Remove F_OWNVALUE.</em>
arr1[1] := arr2         <em>; Assign original array.</em>
arr1[2] := arr2.Clone() <em>; Assign explicit copy.</em>
arr2[0] := "new value"
for arr in arr1
    MsgBox arr[0]

arr1 := ""
<em>; Not valid since arr2 == arr1[1], which has been destroyed: 
;  arr2[0] := "foo"</em>
</pre>
</div>

</body>
</html>
