<!DOCTYPE HTML>
<html lang="en">
<head>
<title>ControlGetList - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The ControlGetList function returns a list of items/rows from a ListView, ListBox, ComboBox, or DropDownList." />
<meta name="ahk:equiv-v1" content="commands/ControlGet.htm#List" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ControlGetList</h1>

<p>Returns a list of items/rows from a ListView, ListBox, ComboBox, or DropDownList.</p>

<pre class="Syntax">List := <span class="func">ControlGetList</span>(<span class="optional">Options, Control, WinTitle, WinText, ExcludeTitle, ExcludeText</span>)</pre>

<h2>Parameters</h2>
<dl>
    <dt>Options</dt>
    <dd>
        <p>Type: <a href="../Concepts.htm#strings">String</a></p>
        <p>Specifices what to retrieve if the control is a ListView (see below). For other control types, <em>Options</em> should be blank/empty.</p>
        <p>If the <em>Options</em> parameter is blank or omitted, all the text in the ListView is retrieved. Otherwise, specify zero or more of the following words, each separated from the next with a space or tab:</p>
        <p><strong>Selected:</strong> Returns only the selected (highlighted) rows rather than all rows. If none, the return value is blank.</p>
        <p><strong>Focused:</strong> Returns only the focused row. If none, the return value is blank.</p>
        <p id="ColN"><strong>Col4:</strong> Returns only the fourth column (field) rather than all columns (replace 4 with a number of your choice).</p>
        <p><strong>Count:</strong> Returns a single number that is the total number of rows in the ListView.</p>
        <p><strong>Count Selected:</strong> Returns the number of selected (highlighted) rows.</p>
        <p><strong>Count Focused:</strong> Returns the row number (position) of the focused row (0 if none).</p>
        <p><strong>Count Col:</strong> Returns the number of columns in the control (or -1 if the count cannot be determined).</p>
    </dd>
    <dt>Control</dt>
    <dd>
        <p>Type: <a href="../Concepts.htm#strings">String</a>, <a href="../Concepts.htm#numbers">Integer</a> or <a href="../Objects.htm">Object</a></p>
        <p>The control's ClassNN, text or HWND, or an object with a <code>Hwnd</code> property. For details, see <a href="Control.htm#Parameter">The Control Parameter</a>.</p>
    </dd>
    <dt>WinTitle</dt>
    <dd>
        <p>Type: <a href="../Concepts.htm#strings">String</a></p>
        <p>A window title or other criteria identifying the target window. See <a href="../misc/WinTitle.htm">WinTitle</a>.</p>
    </dd>
    <dt>WinText</dt>
    <dd>
        <p>Type: <a href="../Concepts.htm#strings">String</a></p>
        <p>If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if <a href="DetectHiddenText.htm">DetectHiddenText</a> is ON.</p>
    </dd>
    <dt>ExcludeTitle</dt>
    <dd>
        <p>Type: <a href="../Concepts.htm#strings">String</a></p>
        <p>Windows whose titles include this value will not be considered.</p>
    </dd>
    <dt>ExcludeText</dt>
    <dd>
        <p>Type: <a href="../Concepts.htm#strings">String</a></p>
        <p>Windows whose text include this value will not be considered.</p>
    </dd>
</dl>

<h2>Return Value</h2>
<p>Type: <a href="../Concepts.htm#strings">String</a></p>
<p>This function returns the list of items/rows from a ListView, ListBox, ComboBox, or DropDownList. For a ListView, within each row, each field (column) except the last will end with a tab character (`t). To access the items/rows individually, use a <a href="LoopParse.htm">parsing loop</a> as in <a href="#ExListView">example #1</a> and <a href="#ExComboBox">example #2</a>.</p>

<h2>Error Handling</h2>
<p>Upon success, <a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to 0. Upon failure, it is set to 1 and the return value is blank. Failure occurs when: 1) the target window or control does not exist; 2) the target ListView is not of type SysListView32; 3) the process owning the ListView could not be opened, perhaps due to a lack of user permissions or because it is locked; 4) the <a href="#ColN">Col<em>N</em> option</a> specifies a nonexistent column.</p>
<p>An <a href="Catch.htm#RuntimeErrors">exception</a> is thrown if invalid parameters are detected.</p>

<h2>Remarks</h2>
<p>Some applications store their ListView text privately, which prevents their text from being retrieved. In these cases, <a href="../misc/ErrorLevel.htm">ErrorLevel</a> will usually be set to 0 (indicating success) but all the retrieved fields will be empty.</p>
<p>The columns in a ListView can be resized via <a href="SendMessage.htm">SendMessage</a> as shown in this example:</p>
<pre>SendMessage(4126, 0, 80, "SysListView321", WinTitle)  <em>; 4126 is the message LVM_SETCOLUMNWIDTH.</em></pre>
<p>In the above, 0 indicates the first column (specify 1 for the second, 2 for the third, etc.) Also, 80 is the new width. Replace 80 with -1 to autosize the column. Replace it with -2 to do the same but also take into account the header text width.</p>
<p>Window titles and text are case sensitive. Hidden windows are not detected unless <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> has been turned on.</p>

<h2>Related</h2>
<p><a href="WinGetList.htm">WinGetList</a>, <a href="Control.htm">Control functions</a></p>

<h2>Examples</h2>
<div class="ex" id="ExListView">
<p><a href="#ExListView">#1</a>: Extracts the individual rows and fields out of a ListView:</p>
<pre>List := ControlGetList("Selected", "SysListView321", WinTitle)
Loop Parse, List, "`n"  <em>; Rows are delimited by linefeeds (`n).</em>
{
    RowNumber := A_Index
    Loop Parse, A_LoopField, A_Tab  <em>; Fields (columns) in each row are delimited by tabs (A_Tab).</em>
        MsgBox "Row #" RowNumber " Col #" A_Index " is " A_LoopField
}</pre>
</div>

<div class="ex" id="ExComboBox">
<p><a href="#ExComboBox">#2</a>: Accesses the items individually:</p>
<pre>List := ControlGetList("", "ComboBox1", WinTitle)
Loop Parse, List, "`n"
    MsgBox "Item number " A_Index " is " A_LoopField</pre>
</div>

</body>
</html>
