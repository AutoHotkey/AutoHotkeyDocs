<!DOCTYPE HTML>
<html lang="en">
<head>
<title>#Include / #IncludeAgain - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The #Include and #IncludeAgain directives cause the script to behave as though the specified file's contents are present at this exact position." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>#Include[Again]</h1>

<p>Causes the script to behave as though the specified file's contents are present at this exact position.</p>

<pre class="Syntax"><span class="func">#Include</span> FileOrDirName
<span class="func">#Include</span> &lt;LibName&gt;
<span class="func">#IncludeAgain</span> FileOrDirName</pre>
<h2>Parameters</h2>
<dl>

  <dt>FileOrDirName</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>The path of a file or directory as explained below. This <strong>must not</strong> contain double quotes, wildcards or <a href="../misc/EscapeChar.htm">escape sequences</a> other than semicolon (<strong>`;</strong>).</p>
    <p>Built-in variables may be used by enclosing them in percent signs (for example, <code>#Include %A_ScriptDir%</code>). Percent signs which are not part of a valid variable reference are interpreted literally. All built-in variables are valid, except for <a href="../misc/ErrorLevel.htm">ErrorLevel</a> and <a href="../Variables.htm#Args">A_Args</a>.</p>
    <p>Known limitation: When compiling a script, variables are evaluated by the compiler and may differ from what the script would return when it is finally executed. The following variables are supported: A_AhkPath, A_AppData, A_AppDataCommon, A_ComputerName, A_ComSpec, A_Desktop, A_DesktopCommon, A_IsCompiled, A_LineFile, A_MyDocuments, A_ProgramFiles, A_Programs, A_ProgramsCommon, A_ScriptDir, A_ScriptFullPath, A_ScriptName, A_Space, A_StartMenu, A_StartMenuCommon, A_Startup, A_StartupCommon, A_Tab, A_Temp, A_UserName, A_WinDir.</p>
    <p><strong>File:</strong> The name of the file to be included, which is assumed to be in the same directory as the current file if an absolute path is not specified. Note: <a href="SetWorkingDir.htm">SetWorkingDir</a> has no effect on #Include because #Include is processed before the script begins executing.</p>
    <p><strong>Directory:</strong> Specify a directory instead of a file to change the working directory used by all subsequent occurrences of #Include and <a href="FileInstall.htm">FileInstall</a> in the current file. Note: Changing the working directory in this way does not affect the script's initial working directory when it starts running (<a href="../Variables.htm#WorkingDir">A_WorkingDir</a>). To change that, use <a href="SetWorkingDir.htm">SetWorkingDir</a> at the top of the script.</p>
  </dd>

  <dt>LibName</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>A library file or function name. For example, <code>#include &lt;lib&gt;</code> and <code>#include &lt;lib_func&gt;</code> would both include lib.ahk from one of the <a href="../Functions.htm#lib">function library folders</a>. <em>LibName</em> cannot contain variable references.</p>
  </dd>

</dl>
<h2>Remarks</h2>
<p>A script behaves as though the included file's contents are physically present at the exact position of the #Include directive (as though a copy-and-paste were done from the included file). Consequently, it generally cannot merge two isolated scripts together into one functioning script.</p>
<p>#Include ensures that <em>FileName</em> is included only once, even if multiple inclusions are encountered for it. By contrast, #IncludeAgain allows multiple inclusions of the same file, while being the same as #Include in all other respects.</p>
<p>The <em>FileName</em> parameter may optionally be preceded by <code>*i</code> and a single space, which causes the program to ignore any failure to read the included file. For example: <code>#Include *i SpecialOptions.ahk</code>. This option should be used only when the included file's contents are not essential to the main script's operation.</p>
<p>Lines displayed in the main window via <a href="ListLines.htm">ListLines</a> or the menu View-&gt;Lines are always numbered according to their physical order within their own files. In other words, including a new file will change the line numbering of the main script file by only one line, namely that of the #Include line itself (except for <a href="../Scripts.htm#ahk2exe">compiled scripts</a>, which merge their included files into one big script at the time of compilation).</p>
<p>#Include is often used to load <a href="../Functions.htm">functions</a> defined in an external file. Unlike subroutine labels, <a href="../Functions.htm">functions</a> can be included at the very top of the script without affecting the <a href="../Scripts.htm#auto">auto-execute section</a>.</p>
<p>Like other # directives, #Include cannot be executed conditionally. In other words, this example would not work:</p>
<pre>if (x = 1)
    #Include SomeFile.ahk  <em>; This line takes effect regardless of the value of x.</em>
    y := 2  <em>; And this line would belong to the IF above, since # directives cannot belong to IFs.</em></pre>
<p>Files can be automatically included (i.e. without having to use #Include) by calling a <a href="../Functions.htm#lib">library function</a> by name.</p>

<h2>Related</h2>
<p><a href="../Functions.htm#lib">Libraries of Functions</a>, <a href="../Functions.htm">Functions</a>, <a href="FileInstall.htm">FileInstall</a></p>
<h2>Examples</h2>
<div class="ex" id="ExBasic">
<p><a href="#ExBasic">#1</a></p>
<pre>#Include C:\My Documents\Scripts\Utility Subroutines.ahk
#Include %A_ScriptDir%  <em>; Changes the working directory for subsequent #Includes and FileInstalls.</em>
#Include C:\My Scripts  <em>; Same as above but for an explicitly named directory.</em></pre>
</div>

</body>
</html>
