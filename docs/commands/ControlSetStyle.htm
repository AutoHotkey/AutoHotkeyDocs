<!DOCTYPE HTML>
<html lang="en">
<head>
<title>ControlSetStyle / ControlSetExStyle - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The ControlSetStyle and ControlSetExStyle functions change the style or extended style of the specified control, respectively." />
<meta name="ahk:equiv-v1" content="commands/Control.htm#Style" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ControlSetStyle / ControlSetExStyle</h1>

<p>Changes the style or extended style of the specified control, respectively.</p>

<pre class="Syntax"><span class="func">ControlSetStyle</span> Value, Control <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span>
<span class="func">ControlSetExStyle</span> Value, Control <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>

<h2>Parameters</h2>
<dl>
    <dt>Value</dt>
    <dd>
        <p>Type: <a href="../Concepts.htm#numbers">Integer</a> or <a href="../Concepts.htm#strings">String</a></p>
        <p>Pass a positive integer to completely overwrite the window's style; that is, to set it to <em>Value</em>.</p>
        <p>To easily add, remove or toggle styles, pass a numeric string prefixed with a plus sign (+), minus sign (-) or caret (^), respectively. The new style value is calculated as shown below (where <em>CurrentStyle</em> could be retrieved with <a href="ControlGetStyle.htm">ControlGetStyle/ControlGetExStyle</a> or <a href="WinGetStyle.htm">WinGetStyle/WinGetExStyle</a>):</p>
        <table class="info">
            <tr>
                <th>Operation</th>
                <th>Prefix</th>
                <th>Example String</th>
                <th>Formula</th>
            </tr>
            <tr>
                <td>Add</td>
                <td>+</td>
                <td>+0x80</td>
                <td><code>NewStyle := CurrentStyle | Value</code></td>
            </tr>
            <tr>
                <td>Remove</td>
                <td>-</td>
                <td>-0x80</td>
                <td><code>NewStyle := CurrentStyle &amp; ~Value</code></td>
            </tr>
            <tr>
                <td>Toggle</td>
                <td>^</td>
                <td>^0x80</td>
                <td><code>NewStyle := CurrentStyle ^ Value</code></td>
            </tr>
        </table>
        <p>If <em>Value</em> is a negative integer, it is treated the same as the corresponding numeric string.</p>
        <p>To use the + or ^ prefix literally in an expression, the prefix or value must be enclosed in quote marks. For example: <code>WinSetStyle("+0x80")</code> or <code>WinSetStyle("^" StylesToToggle)</code>. This is because the <a href="../Variables.htm#Expressions">expression</a> <code><a href="../Variables.htm#unary">+123</a></code> produces 123 (without a prefix) and <code>^123</code> is a syntax error.</p>
    </dd>
    <dt>Control</dt>
    <dd>
        <p>Type: <a href="../Concepts.htm#strings">String</a>, <a href="../Concepts.htm#numbers">Integer</a> or <a href="../Objects.htm">Object</a></p>
        <p>The control's ClassNN, text or HWND, or an object with a <code>Hwnd</code> property. For details, see <a href="Control.htm#Parameter">The Control Parameter</a>.</p>
    </dd>
    <dt>WinTitle</dt>
    <dd>
        <p>Type: <a href="../Concepts.htm#strings">String</a></p>
        <p>A window title or other criteria identifying the target window. See <a href="../misc/WinTitle.htm">WinTitle</a>.</p>
    </dd>
    <dt>WinText</dt>
    <dd>
        <p>Type: <a href="../Concepts.htm#strings">String</a></p>
        <p>If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if <a href="DetectHiddenText.htm">DetectHiddenText</a> is ON.</p>
    </dd>
    <dt>ExcludeTitle</dt>
    <dd>
        <p>Type: <a href="../Concepts.htm#strings">String</a></p>
        <p>Windows whose titles include this value will not be considered.</p>
    </dd>
    <dt>ExcludeText</dt>
    <dd>
        <p>Type: <a href="../Concepts.htm#strings">String</a></p>
        <p>Windows whose text include this value will not be considered.</p>
    </dd>
</dl>

<h2>Return Value</h2>
<p>Type: <a href="../Concepts.htm#boolean">Integer (boolean)</a></p>
<p>This function returns 1 (true) to indicate success or 0 (false) to indicate failure.</p>

<h2>Error Handling</h2>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to 1 if the target window/control is not found or the style is not allowed to be applied.</p>
<p>An <a href="Catch.htm#RuntimeErrors">exception</a> is thrown if invalid parameters are detected.</p>

<h2>Remarks</h2>
<p>See the <a href="../misc/Styles.htm">styles table</a> for a partial listing of styles.</p>
<p>Certain style changes require that the entire window be redrawn using <a href="WinRedraw.htm">WinRedraw</a>.</p>
<p>Window titles and text are case sensitive. Hidden windows are not detected unless <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> has been turned on.</p>

<h2>Related</h2>
<p><a href="ControlGetStyle.htm">ControlGetStyle / ControlGetExStyle</a>, <a href="WinSetStyle.htm">WinSetStyle / WinSetExStyle</a>, <a href="../misc/Styles.htm">styles table</a>, <a href="Control.htm">Control functions</a></p>

<h2>Examples</h2>
<div class="ex" id="ExBasic">
<p><a href="#ExBasic">#1</a>: Sets the WS_BORDER style of the Notepad's Edit control to its opposite state:</p>
<pre>ControlSetStyle("^0x800000", "Edit1", "ahk_class Notepad")</pre>
</div>

</body>
</html>
