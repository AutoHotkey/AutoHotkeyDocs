<!DOCTYPE HTML>
<html lang="en">
<head>
<title>StrSplit() - Syntax &amp; Usage | AutoHotkey</title>
<meta name="description" content="The StrSplit function separates a string into an array of substrings using the specified delimiters." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>StrSplit() <span class="ver">[v1.1.13+]</span></h1>
<p>Separates a string into an array of substrings using the specified delimiters.</p>
<pre class="Syntax">
Array := <span class="func">StrSplit</span>(String <span class="optional">, Delimiters, OmitChars, MaxParts</span>)</pre>

<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>String</dt>
  <dd><p>A string to split.</p></dd>

  <dt>Delimiters</dt>
  <dd>
    <p>If this parameter is blank or omitted, each character of the input string will be treated as a separate substring.</p>
    <p>Otherwise, <em>Delimiters</em> can be either a single string or an array of strings, each of which is used to determine where the boundaries between substrings occur. Since the delimiters are not considered to be part of the substrings themselves, they are never included in the returned array. Also, if there is nothing between a pair of delimiters within the input string, the corresponding array element will be blank.</p>
    <p>For example: <code>","</code> would divide the string based on every occurrence of a comma. Similarly, <code>[A_Tab, A_Space]</code> would create a new array element every time a space or tab is encountered in the input string.</p>
  </dd>

  <dt>OmitChars</dt>
  <dd>
    <p>An optional list of characters (case sensitive) to exclude from the beginning and end of each array element. For example, if <em>OmitChars</em> is <code>" `t"</code>, spaces and tabs will be removed from the beginning and end (but not the middle) of every element.</p>
    <p>If <em>Delimiters</em> is blank, <em>OmitChars</em> indicates which characters should be excluded from the array.</p>
  </dd>

  <dt>MaxParts <span class="ver">[v1.1.28+]</span></dt>
  <dd>If omitted, it defaults to -1, which means "no limit". Otherwise, specify the maximum number of substrings to return. If non-zero, the string is split a maximum of <em>MaxParts</em>-1 times and the remainder of the string is returned in the last substring (excluding any leading or trailing <em>OmitChars</em>).</dd>

</dl>

<h2 id="Return_Value">Return Value</h2>
<p>This function returns an <a href="../Objects.htm#Usage_Simple_Arrays">array</a> (object) of strings.</p>

<h2 id="Remarks">Remarks</h2>
<p>Whitespace characters such as spaces and tabs will be preserved unless those characters are themselves delimiters or included in <em>OmitChars</em>. Tabs and spaces can be trimmed from both ends of any variable by calling the <a href="Trim.htm">Trim</a> function. For example: <code>MyArray1 := Trim(MyArray1)</code>.</p>
<p>To split a string that is in standard CSV (comma separated value) format, use a <a href="LoopParse.htm">parsing loop</a> since it has  built-in CSV handling.</p>
<p>To arrange the fields in a different order prior to splitting them, use the <a href="Sort.htm">Sort</a> command.</p>
<p>If you do not need the substrings to be permanently stored in memory, consider using a <a href="LoopParse.htm">parsing loop</a> -- especially if <em>String</em> is very large, in which case a large amount of memory would be saved. For example:</p>
<pre>Colors := "red,green,blue"
Loop, Parse, Colors, % ","
    MsgBox % "Color number " A_Index " is " A_LoopField</pre>

<h2 id="Related">Related</h2>
<p><a href="StringSplit.htm">StringSplit</a>, <a href="LoopParse.htm">Parsing loop</a>, <a href="../misc/Arrays.htm">Arrays</a>, <a href="Sort.htm">Sort</a>, <a href="SplitPath.htm">SplitPath</a>, <a href="InStr.htm">InStr()</a>, <a href="SubStr.htm">SubStr()</a>, <a href="StrLen.htm">StrLen()</a>, <a href="StringLower.htm">StringLower</a>, <a href="StringLower.htm">StringUpper</a>, <a href="StrReplace.htm">StrReplace()</a></p>

<h2 id="Examples">Examples</h2>
<div class="ex" id="ExSpace">
<p><a class="ex_number" href="#ExSpace"></a> Separates a sentence into an array of words and reports the fourth word.</p>
<pre>TestString := "This is a test."
word_array := StrSplit(TestString, A_Space, ".") <em>; Omits periods.</em>
MsgBox % "The 4th word is " word_array[4]</pre>
</div>

<div class="ex" id="ExComma">
<p><a class="ex_number" href="#ExComma"></a> Separates a comma-separated list of colors into an array of substrings and traverses them, one by one.</p>
<pre>colors := "red,green,blue"
for index, color in StrSplit(colors, ",")
    MsgBox % "Color number " index " is " color</pre>
</div>

</body>
</html>
