<!DOCTYPE HTML>
<html lang="en">
<head>
<title>WinGet - Syntax &amp; Usage | AutoHotkey</title>
<meta name="description" content="The WinGet command retrieves the specified window's unique ID, process ID, process name, a list of its controls, or a list of windows." />
<meta name="ahk:equiv-v2" content="commands/Win.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>WinGet</h1>

<p>Retrieves the specified window's unique ID, process ID, process name, or a list of its controls. It can also retrieve a list of all windows matching the specified criteria.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar <span class="optional">, <a href="#SubCommands">SubCommand</a>, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>

<h2 id="Parameters">Parameters</h2>
<dl>
  <dt>OutputVar</dt>
  <dd>The name of the variable in which to store the result of <em>SubCommand</em>.</dd>

  <dt>SubCommand</dt>
  <dd>The operation to perform, which if blank defaults to the <a href="#ID">ID</a> sub-command. See <a href="#SubCommands">Sub-commands</a>.</dd>

  <dt>WinTitle</dt>
  <dd>A window title or other criteria identifying the target window. See <a href="../misc/WinTitle.htm">WinTitle</a>.</dd>

  <dt>WinText</dt>
  <dd>If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if <a href="DetectHiddenText.htm">DetectHiddenText</a> is ON.</dd>

  <dt>ExcludeTitle</dt>
  <dd>Windows whose titles include this value will not be considered.</dd>

  <dt>ExcludeText</dt>
  <dd>Windows whose text include this value will not be considered.</dd>
</dl>

<h2 id="SubCommands">Sub-commands</h2>
<p>For <em>SubCommand</em>, specify one of the following:</p>
<ul>
    <li><a href="#ID">ID</a>: Retrieves the unique ID number of a window.</li>
    <li><a href="#IDLast">IDLast</a>: Retrieves the unique ID number of the last/bottommost window if there is more than one match.</li>
    <li><a href="#PID">PID</a>: Retrieves the Process ID number of a window.</li>
    <li><a href="#ProcessName">ProcessName</a>: Retrieves the name of the process that owns a window.</li>
    <li><a href="#ProcessPath">ProcessPath</a> <span class="ver">[v1.1.01+]</span>: Retrieves the full path and name of the process that owns a window.</li>
    <li><a href="#Count">Count</a>: Retrieves the number of existing windows that match the title/text parameters.</li>
    <li><a href="#List">List</a>: Retrieves the unique ID numbers of all existing windows that match the title/text parameters.</li>
    <li><a href="#MinMax">MinMax</a>: Retrieves the minimized/maximized state for a window.</li>
    <li><a href="#ControlList">ControlList</a>: Retrieves the control name for each control in a window.</li>
    <li><a href="#ControlListHwnd">ControlListHwnd</a> <span class="ver">[v1.0.43.06+]</span>: Retrieves the unique ID number for each control in a window.</li>
    <li><a href="#Transparent">Transparent</a>: Retrieves the degree of transparency of a window.</li>
    <li><a href="#TransColor">TransColor</a>: Retrieves the color that is marked transparent in a window.</li>
    <li><a href="#Style">Style</a>: Retrieves an 8-digit hexadecimal number representing the style of a window.</li>
    <li><a href="#ExStyle">ExStyle</a>: Retrieves an 8-digit hexadecimal number representing the extended style of a window.</li>
</ul>

<h3 id="ID">ID</h3>
<p>Retrieves the unique ID number of a window.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar, ID <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>Also known as the <a href="ControlGet.htm#Hwnd">window handle (HWND)</a>. If there is no matching window, <em>OutputVar</em> is made blank. The functions <a href="WinExist.htm">WinExist()</a> and <a href="WinActive.htm">WinActive()</a> can also be used to retrieve the ID of a window; for example, <code>WinExist("A")</code> is a fast way to get the ID of the active window. To discover the HWND of a control (for use with <a href="PostMessage.htm">Post/SendMessage</a> or <a href="DllCall.htm">DllCall</a>), use <a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a> or <a href="MouseGetPos.htm">MouseGetPos</a>.</p>

<h3 id="IDLast">IDLast</h3>
<p>Retrieves the unique ID number of the last/bottommost window if there is more than one match.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar, IDLast <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>Also known as the <a href="ControlGet.htm#Hwnd">window handle (HWND)</a>. If there is no matching window, <em>OutputVar</em> is made blank. If there is only one match, it performs identically to the <a href="#ID">ID</a> sub-command. This concept is similar to that used by <a href="WinActivateBottom.htm">WinActivateBottom</a>.</p>

<h3 id="PID">PID</h3>
<p>Retrieves the <a href="Process.htm">Process ID number</a> of a window.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar, PID <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>If there is no matching window, <em>OutputVar</em> is made blank.</p>

<h3 id="ProcessName">ProcessName</h3>
<p>Retrieves the name of the process that owns a window.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar, ProcessName <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>For example, this would be "notepad.exe". If there are no matching windows, <em>OutputVar</em> is made blank.</p>

<h3 id="ProcessPath">ProcessPath <span class="ver">[v1.1.01+]</span></h3>
<p>Retrieves the full path and name of the process that owns a window.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar, ProcessPath <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>For example, this would be "C:\Windows\System32\notepad.exe". If there are no matching windows, <em>OutputVar</em> is made blank.</p>

<h3 id="Count">Count</h3>
<p>Retrieves the number of existing windows that match the title/text parameters.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar, Count <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>If there are no matching windows, <em>OutputVar</em> is set to zero. To count all windows on the system, omit all four title/text parameters. Hidden windows are included only if <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> has been turned on.</p>

<h3 id="List">List</h3>
<p>Retrieves the unique ID numbers of all existing windows that match the title/text parameters.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar, List <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>To retrieve all windows on the entire system, omit all four title/text parameters. Each ID number is stored in a variable whose name begins with <em>OutputVar</em>'s own name (to form a <a href="../misc/Arrays.htm#pseudo">pseudo-array</a>), while <em>OutputVar</em> itself is set to the number of retrieved items (0 if none). For example, if <em>OutputVar</em> is MyArray and two matching windows are discovered, MyArray1 will be set to the ID of the first window, MyArray2 will be set to the ID of the second window, and MyArray itself will be set to the number 2. Windows are retrieved in order from topmost to bottommost (according to how they are stacked on the desktop). Hidden windows are included only if <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> has been turned on. Within a <a href="../Functions.htm">function</a>, to create a pseudo-array that is global instead of local, <a href="../Functions.htm#Global">declare</a> MyArray as a global variable prior to using this command (the converse is true for <a href="../Functions.htm#AssumeGlobal">assume-global</a> functions). However, it is often also necessary to declare each variable in the set, due to a <a href="../Functions.htm#ArrayConfusion">common source of confusion</a>.</p>

<h3 id="MinMax">MinMax</h3>
<p>Retrieves the minimized/maximized state for a window.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar, MinMax <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p><em>OutputVar</em> is made blank if no matching window exists; otherwise, it is set to one of the following numbers:</p>
<ul>
  <li>-1: The window is minimized (<a href="WinRestore.htm">WinRestore</a> can unminimize it).</li>
  <li>1: The window is maximized (<a href="WinRestore.htm">WinRestore</a> can unmaximize it).</li>
  <li>0: The window is neither minimized nor maximized.</li>
</ul>

<h3 id="ControlList">ControlList</h3>
<p>Retrieves the control name for each control in a window.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar, ControlList <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>If no matching window exists or there are no controls in the window, <em>OutputVar</em> is made blank. Otherwise, each control name consists of its class name followed immediately by its sequence number (ClassNN), as shown by Window Spy.</p>
<p>Each item except the last is terminated by a linefeed (`n). To examine the individual control names one by one, use a <a href="LoopParse.htm">parsing loop</a> as shown in <a href="#ExControlList">example #3</a> below.</p>
<p>Controls are sorted according to their Z-order, which is usually the same order as the navigation order via <kbd>Tab</kbd> if the window supports tabbing.</p>

<h3 id="ControlListHwnd">ControlListHwnd <span class="ver">[v1.0.43.06+]</span></h3>
<p>Retrieves the unique ID number for each control in a window.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar, ControlListHwnd <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>If no matching window exists or there are no controls in the window, <em>OutputVar</em> is made blank. Otherwise, each unique ID is the <a href="ControlGet.htm#Hwnd">window handle (HWND)</a> of the control. Each item except the last is terminated by a linefeed (`n).</p>
<p>Controls are sorted according to their Z-order, which is usually the same order as the navigation order via <kbd>Tab</kbd> if the window supports tabbing.</p>

<h3 id="Transparent">Transparent</h3>
<p>Retrieves the degree of transparency of a window.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar, Transparent <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>See <a href="WinSet.htm">WinSet</a> for how to set transparency. <em>OutputVar</em> is made blank if: 1) the OS is older than Windows XP; 2) there are no matching windows; 3) the window has no transparency level; or 4) other conditions (caused by OS behavior) such as the window having been minimized, restored, and/or resized since it was made transparent. Otherwise, a number between 0 and 255 is stored, where 0 indicates an invisible window and 255 indicates an opaque window. For example:</p>
<pre>MouseGetPos,,, MouseWin
WinGet, Transparent, Transparent, ahk_id %MouseWin%  <em>; Transparency of window under the mouse cursor.</em></pre>

<h3 id="TransColor">TransColor</h3>
<p>Retrieves the color that is marked transparent in a window.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar, TransColor <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>See <a href="WinSet.htm#TransColor">WinSet</a> for how to set the TransColor. <em>OutputVar</em> is made blank if: 1) the OS is older than Windows XP; 2) there are no matching windows; 3) the window has no transparent color; or 4) other conditions (caused by OS behavior) such as the window having been minimized, restored, and/or resized since it was made transparent. Otherwise, a six-digit hexadecimal RGB color is stored, e.g. 0x00CC99. For example:</p>
<pre>MouseGetPos,,, MouseWin
WinGet, TransColor, TransColor, ahk_id %MouseWin%  <em>; TransColor of the window under the mouse cursor.</em></pre>

<h3 id="Style">Style</h3>
<p>Retrieves an 8-digit hexadecimal number representing the style of a window.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar, Style <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>If there are no matching windows, <em>OutputVar</em> is made blank. The following example determines whether a window has the WS_DISABLED style:</p>
<pre>WinGet, Style, Style, My Window Title
if (Style &amp; 0x8000000)  <em>; 0x8000000 is WS_DISABLED.</em>
  MsgBox The window is disabled.</pre>
<p>See the <a href="../misc/Styles.htm">styles table</a> for a partial listing of styles.</p>

<h3 id="ExStyle">ExStyle</h3>
<p>Retrieves an 8-digit hexadecimal number representing the extended style of a window.</p>
<pre class="Syntax"><span class="func">WinGet</span>, OutputVar, ExStyle <span class="optional">, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<p>If there are no matching windows, <em>OutputVar</em> is made blank. The following example determines whether a window has the WS_EX_TOPMOST style (always-on-top):</p>
<pre>WinGet, ExStyle, ExStyle, My Window Title
if (ExStyle &amp; 0x8)  <em>; 0x8 is WS_EX_TOPMOST.</em>
   MsgBox The window is always-on-top.</pre>
<p>See the <a href="../misc/Styles.htm">styles table</a> for a partial listing of styles.</p>

<h2 id="Remarks">Remarks</h2>
<p>A window's ID number is valid only during its lifetime. In other words, if an application restarts, all of its windows will get new ID numbers.</p>
<p>ID numbers retrieved by this command are numeric (the prefix "ahk_id" is not included) and are stored in hexadecimal format regardless of the setting of <a href="SetFormat.htm">SetFormat</a>.</p>
<p>The ID of the window under the mouse cursor can be retrieved with <a href="MouseGetPos.htm">MouseGetPos</a>.</p>
<p>Although ID numbers are currently 32-bit unsigned integers, they may become 64-bit in future versions. Therefore, it is unsafe to perform numerical operations such as addition on these values because such operations require that their input strings be parsable as signed rather than unsigned integers.</p>
<p>Window titles and text are case sensitive. Hidden windows are not detected unless <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> has been turned on.</p>

<h2 id="Related">Related</h2>
<p><a href="WinGetClass.htm">WinGetClass</a>, <a href="Process.htm">Process</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="MouseGetPos.htm">MouseGetPos</a>, <a href="ControlGet.htm">ControlGet</a>, <a href="ControlFocus.htm">ControlFocus</a>, <a href="GroupAdd.htm">GroupAdd</a></p>

<h2 id="Examples">Examples</h2>

<div class="ex" id="ExID">
<p><a class="ex_number" href="#ExID"></a> Maximizes the active window and reports its unique ID.</p>
<pre>WinGet, active_id, ID, A
WinMaximize, ahk_id %active_id%
MsgBox, The active window's ID is "%active_id%".</pre>
</div>

<div class="ex" id="ExList">
<p><a class="ex_number" href="#ExList"></a> Visits all windows on the entire system and displays info about each of them.</p>
<pre>WinGet, id, List,,, Program Manager
Loop, %id%
{
    this_id := id%A_Index%
    WinActivate, ahk_id %this_id%
    WinGetClass, this_class, ahk_id %this_id%
    WinGetTitle, this_title, ahk_id %this_id%
    MsgBox, 4, , Visiting All Windows`n%A_Index% of %id%`nahk_id %this_id%`nahk_class %this_class%`n%this_title%`n`nContinue?
    IfMsgBox, NO, break
}</pre>
</div>

<div class="ex" id="ExControlList">
<p><a class="ex_number" href="#ExControlList"></a> Extracts the individual control names from the active window's control list.</p>
<pre>WinGet, ActiveControlList, ControlList, A
Loop, Parse, ActiveControlList, `n
{
    MsgBox, 4,, Control #%A_Index% is "%A_LoopField%". Continue?
    IfMsgBox, No
        break
}</pre>
</div>

<div class="ex" id="ExRealTime">
<p><a class="ex_number" href="#ExRealTime"></a> Displays in real time the active window's control list.</p>
<pre>#Persistent
SetTimer, WatchActiveWindow, 200
return

WatchActiveWindow:
WinGet, ControlList, ControlList, A
ToolTip, %ControlList%
return</pre>
</div>

</body>
</html>
