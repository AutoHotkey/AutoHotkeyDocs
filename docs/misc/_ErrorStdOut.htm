<!DOCTYPE HTML>
<html lang="en">
<head>
<title>#ErrorStdOut - Syntax &amp; Usage | AutoHotkey</title>
<meta name="description" content="The #ErrorStdOut directive sends any syntax error that prevents a script from launching to the standard error stream (stderr) rather than displaying a dialog." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>#ErrorStdOut</h1>

<p>Sends any syntax error that prevents a script from launching to the standard error stream (stderr) rather than displaying a dialog.</p>

<pre class="Syntax"><span class="func">#ErrorStdOut</span> <span class="optional">Encoding</span></pre>

<h2 id="Parameters">Parameters</h2>
<dl>
  <dt>Encoding <span class="ver">[v1.1.33+]</span></dt>
  <dd>An <a href="FileEncoding.htm">encoding string</a> specifying how to encode the output. For example, <code>#ErrorStdOut UTF-8</code> encodes error messages as UTF-8 before sending them to stderr. Whatever program is capturing the output must support UTF-8, and in some cases may need to be configured to expect it. If omitted, it defaults to CP0.</dd>
</dl>

<h2 id="Remarks">Remarks</h2>
<p><span class="ver">[AHK_L 42+]:</span> Errors are written to stderr instead of stdout. The command prompt and fancy editors usually display both. This change was undocumented until after <span class="ver">[v1.1.19.01]</span>.</p>
<p>This allows fancy editors such as TextPad, SciTE, Crimson, and EditPlus to jump to the offending line when a syntax error occurs. Since the #ErrorStdOut directive would have to be added to every script, it is usually better to set up your editor to use the <a href="../Scripts.htm#cmd">command line switch</a> <strong>/ErrorStdOut</strong> when launching any AutoHotkey script (see further below for setup instructions).</p>
<p>Because AutoHotkey is not a console program, errors will not appear at the command prompt directly. This can be worked around by 1) <span class="ver">[v1.1.33+]</span> compiling the script with the <a href="../misc/Ahk2ExeDirectives.htm#ConsoleApp">Ahk2Exe ConsoleApp directive</a>, or 2) capturing the script's output via piping or redirection. For example:</p>
<pre class="no-highlight">"C:\Program Files\AutoHotkey\AutoHotkey.exe" /ErrorStdOut "My Script.ahk" <strong>2&gt;&amp;1 |more</strong>
"C:\Program Files\AutoHotkey\AutoHotkey.exe" /ErrorStdOut "My Script.ahk" <strong>2&gt;"Syntax-Error Log.txt"</strong></pre>
<p>You can also pipe the output directly to the clipboard by using the operating system's built-in clip command (for Windows XP and lower, download and use <a href="https://www.autohotkey.com/misc/cb.zip">cb.exe</a> instead). For example:</p>
<pre class="no-highlight">"C:\Program Files\AutoHotkey\AutoHotkey.exe" /ErrorStdOut "My Script.ahk" <strong>2&gt;&amp;1 |clip</strong></pre>
<p class="note"><strong>Note:</strong> <code>2&gt;&amp;1</code> causes stderr to be redirected to stdout, while <code>2&gt;<i>Filename</i></code> redirects only stderr to a file.</p>
<p>Like other directives, #ErrorStdOut cannot be executed conditionally.</p>

<h2 id="Instructions_for_specific_editors">Instructions for specific editors</h2>
<p><strong>EditPlus</strong>:</p>
<ol>
  <li>From the menu bar, select Tools &gt; Configure User Tools.</li>
  <li>Press button: Add Tool &gt; Program</li>
  <li>Menu Text: Your choice</li>
  <li>Command: <code>C:\Program Files\AutoHotkey\AutoHotkey.exe</code></li>
  <li>Argument: <code class="no-highlight">/ErrorStdOut "$(FilePath)"</code></li>
  <li>Initial directory: <code>$(FileDir)</code></li>
  <li>Capture output: Yes</li>
</ol>
<p><strong>TextPad</strong>:</p>
<ol>
  <li>From the menu bar, select Configure &gt; Preferences.</li>
  <li>Expand the Tools entry.</li>
  <li>Press the Add button and select "Program".</li>
  <li>Copy and paste (adjust to your path): <code>C:\Windows\System32\cmd.exe</code> -- then press OK.</li>
  <li>Triple-click the newly added item (cmd.exe) in the ListBox and rename it to your choice (e.g. Launch Script).</li>
  <li>Press Apply.</li>
  <li>Select the new item in the tree at the left and enter the following information:</li>
  <li>Command (should already be filled in): <code>cmd.exe</code> (or the full path to it)</li>
  <li>Parameters (adjust to your path, if necessary): <code class="no-highlight">/c ""C:\Program Files\AutoHotkey\AutoHotkey.exe" /ErrorStdOut "$File""</code></li>
  <li>Initial folder: <code>$FileDir</code></li>
  <li>Check the following boxes: 1) Run minimized; 2) Capture output.</li>
  <li>Press OK. The newly added item should now exist in the Tools menu.</li>
</ol>

<h2 id="Related">Related</h2>
<p><a href="FileAppend.htm">FileAppend</a> (because it can also send text to stderr or stdout)</p>
<h2 id="Examples">Examples</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Sends any syntax error that prevents the script from launching to stderr rather than displaying a dialog.</p>
<pre>#ErrorStdOut</pre>
</div>

</body>
</html>
